//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "Index.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string Index::genText(const DrTemplateData& Index_view_data)
{
	drogon::OStringStream Index_tmp_stream;
	std::string layoutName{""};
	Index_tmp_stream << "<!doctype html>\n";
	Index_tmp_stream << "<html lang=\"zh-CN\" data-bs-theme=\"auto\">\n";
	Index_tmp_stream << "<head>\n";
	Index_tmp_stream << "<meta charset=\"UTF-8\">\n";
	Index_tmp_stream << "	<title>pdf自动转换</title>\n";
	Index_tmp_stream << "	<style>\n";
	Index_tmp_stream << "    		body {\n";
	Index_tmp_stream << "              margin: 20px 60px;\n";
	Index_tmp_stream << "            }\n";
Index_tmp_stream<<"\n";
	Index_tmp_stream << "            .drop-container {\n";
	Index_tmp_stream << "              position: relative;\n";
	Index_tmp_stream << "              display: flex;\n";
	Index_tmp_stream << "              gap: 10px;\n";
	Index_tmp_stream << "              flex-direction: column;\n";
	Index_tmp_stream << "              justify-content: center;\n";
	Index_tmp_stream << "              align-items: center;\n";
	Index_tmp_stream << "              height: 200px;\n";
	Index_tmp_stream << "              padding: 20px;\n";
	Index_tmp_stream << "              border-radius: 10px;\n";
	Index_tmp_stream << "              border: 2px dashed #555;\n";
	Index_tmp_stream << "              color: #444;\n";
	Index_tmp_stream << "              cursor: pointer;\n";
	Index_tmp_stream << "              transition: background .2s ease-in-out, border .2s ease-in-out;\n";
	Index_tmp_stream << "            }\n";
Index_tmp_stream<<"\n";
	Index_tmp_stream << "            .drop-container:hover {\n";
	Index_tmp_stream << "              background: #eee;\n";
	Index_tmp_stream << "              border-color: #111;\n";
	Index_tmp_stream << "            }\n";
Index_tmp_stream<<"\n";
	Index_tmp_stream << "            .drop-container:hover .drop-title {\n";
	Index_tmp_stream << "              color: #222;\n";
	Index_tmp_stream << "            }\n";
Index_tmp_stream<<"\n";
	Index_tmp_stream << "            .drop-title {\n";
	Index_tmp_stream << "              color: #444;\n";
	Index_tmp_stream << "              font-size: 20px;\n";
	Index_tmp_stream << "              font-weight: bold;\n";
	Index_tmp_stream << "              text-align: center;\n";
	Index_tmp_stream << "              transition: color .2s ease-in-out;\n";
	Index_tmp_stream << "            }\n";
Index_tmp_stream<<"\n";
	Index_tmp_stream << "            input[type=file] {\n";
	Index_tmp_stream << "              width: 350px;\n";
	Index_tmp_stream << "              max-width: 100%;\n";
	Index_tmp_stream << "              color: #444;\n";
	Index_tmp_stream << "              padding: 5px;\n";
	Index_tmp_stream << "              background: #fff;\n";
	Index_tmp_stream << "              border-radius: 10px;\n";
	Index_tmp_stream << "              border: 1px solid #555;\n";
	Index_tmp_stream << "            }\n";
Index_tmp_stream<<"\n";
	Index_tmp_stream << "            input[type=file]::file-selector-button {\n";
	Index_tmp_stream << "              margin-right: 20px;\n";
	Index_tmp_stream << "              border: none;\n";
	Index_tmp_stream << "              background: #084cdf;\n";
	Index_tmp_stream << "              padding: 10px 20px;\n";
	Index_tmp_stream << "              border-radius: 10px;\n";
	Index_tmp_stream << "              color: #fff;\n";
	Index_tmp_stream << "              cursor: pointer;\n";
	Index_tmp_stream << "              transition: background .2s ease-in-out;\n";
	Index_tmp_stream << "            }\n";
Index_tmp_stream<<"\n";
	Index_tmp_stream << "            input[type=file]::file-selector-button:hover {\n";
	Index_tmp_stream << "              background: #0d45a5;\n";
	Index_tmp_stream << "            }\n";
Index_tmp_stream<<"\n";
	Index_tmp_stream << "            button[type=submit]{\n";
	Index_tmp_stream << "                font-size: 20px;\n";
	Index_tmp_stream << "                width:100%;\n";
	Index_tmp_stream << "                margin-top:5px;\n";
	Index_tmp_stream << "                text-align: center;\n";
	Index_tmp_stream << "                height=70px;\n";
	Index_tmp_stream << "                border: 1px solid;\n";
	Index_tmp_stream << "                border-radius: 5px;\n";
	Index_tmp_stream << "                cursor: pointer;\n";
	Index_tmp_stream << "                transition: background .2s ease-in-out;\n";
	Index_tmp_stream << "            }\n";
	Index_tmp_stream << "            button[type=submit]:hover{\n";
	Index_tmp_stream << "                background: #ddd;\n";
	Index_tmp_stream << "                border-color: #222;\n";
	Index_tmp_stream << "            }\n";
	Index_tmp_stream << "    	</style>\n";
	Index_tmp_stream << "</head>\n";
	Index_tmp_stream << "<div class=\"container\">\n";
	Index_tmp_stream << "    <form action=\"/pdf/convertPdf\" method=\"post\" enctype=\"multipart/form-data\" class=\"form\">\n";
	Index_tmp_stream << "      <label for=\"file\" class=\"drop-container\">\n";
	Index_tmp_stream << "        <span class=\"drop-title\">自动转换pdf，支持非加密的doc、docx、xls、xlsx、csv、ppt、pptx、wps、rtf格式的文档转换</span>\n";
	Index_tmp_stream << "        <span class=\"drop-title\">将文件拖入或者上传</span>\n";
	Index_tmp_stream << "        <input type=\"file\" id=\"file\" name=\"file\" required>\n";
	Index_tmp_stream << "      </label>\n";
	Index_tmp_stream << "      <button type=\"submit\">转换</button>\n";
	Index_tmp_stream << "    </form>\n";
	Index_tmp_stream << "</div>\n";
Index_tmp_stream<<"\n";
if(layoutName.empty())
{
std::string ret{std::move(Index_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = Index_view_data;
auto str = std::move(Index_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
